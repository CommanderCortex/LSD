package me.cortex.LSD.Parser;

import java.util.ArrayList;

import me.cortex.LSD.Parameter;
import me.cortex.LSD.Block.Block;
import me.cortex.LSD.Block.Method;
import me.cortex.LSD.Tokenizer.Token;
import me.cortex.LSD.Tokenizer.Tokenizer;

public class MethodParser extends Parser<Method>{

	@Override
	public boolean shouldParse(String line) {
		return line.matches("method [a-zA-Z][a-zA-Z0-9]* requires \\(([a-zA-Z][a-zA-Z0-9]* [a-zA-Z][a-zA-Z0-9]*)*\\) returns [a-zA-Z][a-zA-Z0-9]*");
	}

	@Override
	public Method parse(Block superBlock, Tokenizer tokenizer) {
		tokenizer.nextToken();		
		String name = tokenizer.nextToken().getToken();
		tokenizer.nextToken();
		tokenizer.nextToken();
		
		Token first = tokenizer.nextToken();
		
		ArrayList<Parameter> params = new ArrayList<>();
		
		
		if(!first.getToken().equals(")")) {
			Object[] ParamData = new Object[] {first, null};
 			
		}
	}

}




















